# Generated by Django 3.0.6 on 2020-06-22 21:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clgStudent', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CT',
            fields=[
                ('ctId', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('TotalMarks', models.PositiveIntegerField(max_length=3)),
                ('isResultEntered', models.BooleanField()),
                ('ctPercentage', models.PositiveIntegerField(max_length=3)),
            ],
            options={
                'ordering': ['-ExamID', 'ctId'],
            },
        ),
        migrations.CreateModel(
            name='CustomExam',
            fields=[
                ('CustomExamId', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('ExamName', models.CharField(max_length=40, verbose_name='Exam Name')),
                ('TotalMarks', models.PositiveIntegerField(max_length=3)),
                ('CQ', models.PositiveIntegerField(max_length=3)),
                ('MCQ', models.PositiveIntegerField(max_length=2)),
                ('PassMarksCQ', models.PositiveIntegerField(max_length=2)),
                ('PassMarksMCQ', models.PositiveIntegerField(max_length=2)),
                ('isResultEntered', models.BooleanField()),
                ('CustomExamPercentage', models.PositiveIntegerField(max_length=3)),
            ],
            options={
                'ordering': ['-ExamID', 'CustomExamId'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('ExamID', models.PositiveIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Exam ID')),
                ('Examiner', models.CharField(max_length=50, verbose_name='Examiner Name')),
                ('Sub_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SubjectExams', to='clgStudent.Subjects')),
            ],
            options={
                'ordering': ['-ExamID'],
            },
        ),
        migrations.CreateModel(
            name='Practical',
            fields=[
                ('PracticalId', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('TotalMarks', models.PositiveIntegerField(default=25, max_length=2)),
                ('PassMarks', models.PositiveIntegerField(max_length=2)),
                ('isResultEntered', models.BooleanField()),
                ('PracticalPercentage', models.PositiveIntegerField(max_length=3)),
                ('ExamID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clgExam.Exam')),
            ],
            options={
                'ordering': ['-ExamID', 'PracticalId'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('TermId', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('TermName', models.CharField(max_length=40, verbose_name='Term Name')),
                ('YearStatus', models.CharField(choices=[('1', 'First Year'), ('2', 'Second Year')], default='1', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='TermFinal',
            fields=[
                ('TermFinalId', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('TotalMarks', models.PositiveIntegerField(max_length=3)),
                ('CQ', models.PositiveIntegerField(max_length=3)),
                ('MCQ', models.PositiveIntegerField(max_length=2)),
                ('PassMarksCQ', models.PositiveIntegerField(max_length=2)),
                ('PassMarksMCQ', models.PositiveIntegerField(max_length=2)),
                ('isResultEntered', models.BooleanField()),
                ('TermFinalPercentage', models.PositiveIntegerField(max_length=3)),
                ('ExamID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clgExam.Exam')),
            ],
            options={
                'ordering': ['-ExamID', 'TermFinalId'],
            },
        ),
        migrations.CreateModel(
            name='TermFinalMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AchievedMarksCQ', models.PositiveIntegerField(max_length=3)),
                ('AchievedMarksMCQ', models.PositiveIntegerField(max_length=2)),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
                ('TermFinalId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.TermFinal')),
            ],
            options={
                'ordering': ['-TermFinalId', 'Roll'],
            },
        ),
        migrations.CreateModel(
            name='TermFinalAbsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reason', models.CharField(choices=[('1', 'Absent'), ('2', 'Non Collegiate')], default='1', max_length=1)),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
                ('TermFinalId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.TermFinal')),
            ],
            options={
                'ordering': ['-TermFinalId', 'Roll'],
            },
        ),
        migrations.AddField(
            model_name='termfinal',
            name='TermFinal_Absent',
            field=models.ManyToManyField(related_name='TermFinalAbsents', through='clgExam.TermFinalAbsent', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='termfinal',
            name='TermFinal_Marks',
            field=models.ManyToManyField(related_name='allTermFinalMarks', through='clgExam.TermFinalMarks', to='clgStudent.StudentInfo'),
        ),
        migrations.CreateModel(
            name='PracticalMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AchievedMarks', models.PositiveIntegerField(max_length=3)),
                ('PracticalId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.Practical')),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
            ],
            options={
                'ordering': ['-PracticalId', 'Roll'],
            },
        ),
        migrations.CreateModel(
            name='PracticalAbsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reason', models.CharField(choices=[('1', 'Absent'), ('2', 'Non Collegiate')], default='1', max_length=1)),
                ('PracticalId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.Practical')),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
            ],
            options={
                'ordering': ['-PracticalId', 'Roll'],
            },
        ),
        migrations.AddField(
            model_name='practical',
            name='Practical_Absent',
            field=models.ManyToManyField(related_name='PracticalAbsents', through='clgExam.PracticalAbsent', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='practical',
            name='Practical_Marks',
            field=models.ManyToManyField(related_name='allPracticalMarks', through='clgExam.PracticalMarks', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='exam',
            name='TermId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TermExams', to='clgExam.Term'),
        ),
        migrations.CreateModel(
            name='CustomExamMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AchievedMarksCQ', models.PositiveIntegerField(max_length=3)),
                ('AchievedMarksMCQ', models.PositiveIntegerField(default=0, max_length=2)),
                ('CustomExamId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.CustomExam')),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
            ],
            options={
                'ordering': ['-CustomExamId', 'Roll'],
            },
        ),
        migrations.CreateModel(
            name='CustomExamAbsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reason', models.CharField(choices=[('1', 'Absent'), ('2', 'Non Collegiate')], default='1', max_length=1)),
                ('CustomExamId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.CustomExam')),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
            ],
            options={
                'ordering': ['-CustomExamId', 'Roll'],
            },
        ),
        migrations.AddField(
            model_name='customexam',
            name='CustomExam_Absent',
            field=models.ManyToManyField(related_name='CustomExamAbsents', through='clgExam.CustomExamAbsent', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='customexam',
            name='CustomExam_Marks',
            field=models.ManyToManyField(related_name='allCustomExamMarks', through='clgExam.CustomExamMarks', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='customexam',
            name='ExamID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CustomExams', to='clgExam.Exam'),
        ),
        migrations.CreateModel(
            name='CTMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AchievedMarks', models.PositiveIntegerField(max_length=3)),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
                ('ctId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.CT')),
            ],
            options={
                'ordering': ['-ctId', 'Roll'],
            },
        ),
        migrations.CreateModel(
            name='CTAbsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reason', models.CharField(choices=[('1', 'Absent'), ('2', 'Non Collegiate')], default='1', max_length=1)),
                ('Roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgStudent.StudentInfo')),
                ('ctId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clgExam.CT')),
            ],
            options={
                'ordering': ['-ctId', 'Roll'],
            },
        ),
        migrations.AddField(
            model_name='ct',
            name='CT_Absent',
            field=models.ManyToManyField(related_name='CTAbsents', through='clgExam.CTAbsent', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='ct',
            name='CT_Marks',
            field=models.ManyToManyField(related_name='allCtMarks', through='clgExam.CTMarks', to='clgStudent.StudentInfo'),
        ),
        migrations.AddField(
            model_name='ct',
            name='ExamID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CTs', to='clgExam.Exam'),
        ),
    ]
